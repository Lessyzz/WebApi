@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Yeni Ürün Ekle";

    var categoryFeaturesJson = ViewBag.CategoryFeaturesMap != null
        ? System.Text.Json.JsonSerializer.Serialize(ViewBag.CategoryFeaturesMap)
        : "{}";
}

<div class="container py-4">
    <a class="link-body-emphasis text-decoration-none" href="/Seller">
        <h6 style="cursor: pointer;">
            <i class="bi bi-arrow-left"></i>
            Geri
        </h6>
    </a>
    <h2 class="mb-4">Yeni Ürün Ekle</h2>

    <div class="card shadow-sm">
        <div class="card-body">
            <form method="post" enctype="multipart/form-data" action="/Product/AddProduct" id="productForm">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Ürün Adı</label>
                            <input name="Name" class="form-control" required/>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Açıklama</label>
                            <textarea name="Description" class="form-control" rows="4" required></textarea>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Fiyat (₺)</label>
                                <div class="input-group">
                                    <span class="input-group-text">₺</span>
                                    <input type="number" step="0.01" name="Price" class="form-control" required/>
                                </div>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label class="form-label">İndirim (%)</label>
                                <div class="input-group">
                                    <input type="number" step="0.01" name="Discount" class="form-control" value="0"/>
                                    <span class="input-group-text">%</span>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Ürün Görselleri</label>
                            <input type="file" name="ImageFiles" id="imageInput" class="form-control" accept="image/*" multiple/>
                        </div>

                        <div id="imagePreviewContainer" class="d-flex flex-wrap gap-2 mt-2 mb-3">
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Kategori</label>
                            <select name="CategoryId" id="categorySelect" class="form-select" required>
                                <option value="">-- Kategori Seçin --</option>
                                @if (ViewBag.Categories != null)
                                {
                                    foreach (var cat in (List<(int Id, string Name)>)ViewBag.Categories)
                                    {
                                        <option value="@cat.Id">@cat.Name</option>
                                    }
                                }
                            </select>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Stok Adedi</label>
                            <input type="number" name="Quantity" class="form-control" required/>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Ürün Özellikleri</label>
                            <div id="featuresContainer" class="border p-3 rounded bg-light">
                                <p class="text-muted" id="featuresPlaceholder">Lütfen önce bir kategori seçin.</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary btn-lg px-4">
                        <i class="bi bi-plus-circle me-2"></i> Ürün Ekle
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Image preview functionality
    document.getElementById('imageInput').addEventListener('change', function() {
        const container = document.getElementById('imagePreviewContainer');
        container.innerHTML = ''; // Clear previous previews

        if (this.files) {
            Array.from(this.files).forEach(file => {
                if (!file.type.match('image.*')) return;

                const reader = new FileReader();

                reader.onload = function(e) {
                    const previewDiv = document.createElement('div');
                    previewDiv.className = 'position-relative d-inline-block';
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.alt = "Image preview";
                    img.className = 'img-thumbnail';
                    img.style.width = '100px';
                    img.style.height = '100px';
                    img.style.objectFit = 'cover';

                    previewDiv.appendChild(img);
                    container.appendChild(previewDiv);
                }

                reader.readAsDataURL(file);
            });
        }
    });

    // --- Category-Defined Features Functionality ---
    const categorySelect = document.getElementById('categorySelect');
    const featuresContainer = document.getElementById('featuresContainer');
    const featuresPlaceholder = document.getElementById('featuresPlaceholder');

    const categoryFeaturesMap = JSON.parse('@Html.Raw(categoryFeaturesJson)');

    // Function to update the feature inputs based on selected category
    function updateFeatureInputs() {
        const selectedCategoryId = categorySelect.value;
        const featureKeys = categoryFeaturesMap[selectedCategoryId] || []; // Get feature keys for the category, or empty array if none/not found

        // Clear previous features
        featuresContainer.innerHTML = '';

        if (featureKeys.length > 0) {
            // Hide the placeholder if features exist
            if(featuresPlaceholder) featuresPlaceholder.style.display = 'none';

            // Generate input fields for each feature key
            featureKeys.forEach(key => {
                const featureDiv = document.createElement('div');
                featureDiv.className = 'mb-3'; // Add margin between feature inputs

                const label = document.createElement('label');
                label.className = 'form-label';
                label.textContent = key; // Display the feature key as the label
                // Associate label with input using 'for' and 'id'
                const inputId = `featureInput_${key.replace(/[^a-zA-Z0-9]/g, '_')}`; // Create a safe ID
                label.htmlFor = inputId;

                const input = document.createElement('input');
                input.type = 'text';
                input.className = 'form-control';
                input.id = inputId;
                input.name = `FeatureValues[${key}]`;
                input.required = true; // Make feature values required

                featureDiv.appendChild(label);
                featureDiv.appendChild(input);
                featuresContainer.appendChild(featureDiv);
            });
        } else {
            // Show placeholder text if no category is selected or category has no defined features
            if(featuresPlaceholder) {
                featuresPlaceholder.textContent = selectedCategoryId ? 'Bu kategori için tanımlanmış özellik bulunmamaktadır.' : 'Lütfen önce bir kategori seçin.';
                featuresPlaceholder.style.display = 'block'; // Ensure placeholder is visible
            } else {
                // Fallback if placeholder element wasn't found (shouldn't happen with current HTML)
                featuresContainer.innerHTML = `<p class="text-muted">${selectedCategoryId ? 'Bu kategori için tanımlanmış özellik bulunmamaktadır.' : 'Lütfen önce bir kategori seçin.'}</p>`;
            }
        }
    }

    // Add event listener to the category dropdown
    categorySelect.addEventListener('change', updateFeatureInputs);

    // Initial call to populate features if a category is pre-selected (e.g., on validation failure)
    // Or to show the initial placeholder text
    updateFeatureInputs();

</script>
